#!/usr/bin/env bash

fn_stoponerror ()
{
	# Usage:
	# fn_stoponerror $? $LINENO
	error_code=$1
	line=$2
	if [ $error_code -ne 0 ]; then
		printf "\n"$line": error ["$error_code"]\n\n"
		exit $error_code
	fi
}
#https://stackoverflow.com/questions/59895/how-do-i-get-the-directory-where-a-bash-script-is-located-from-within-the-script
#https://stackoverflow.com/a/246128
#Dave Dopson https://stackoverflow.com/users/407731
SOURCE=${BASH_SOURCE[0]}
while [ -L "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  dir0=$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )
  SOURCE=$(readlink "$SOURCE")
  [[ $SOURCE != /* ]] && SOURCE=$dir0/$SOURCE # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
dir0=$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )
source $dir0/settings.sh
fn_stoponerror $? $LINENO

$dir0/bin/pip$settings_python_version_short "$@"
fn_stoponerror $? $LINENO
